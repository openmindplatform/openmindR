dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- gbss_dat %>% pull(cohend) %>% round(2)
tlab <- gbss_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
## Plot Graph
c("GBSS") %>%
purrr::map_dfr(~openmindR:::summary_se_within(subset(gbss_analysis, variable_code == .x),
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
mutate(variable_code = .x)) %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 6) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("Belief Superiority (Pre vs. Post)")
cleaned_dat %>%
select(CIHS_LIO1Pre:CIHS_LIO4Pre) %>%
# mutate_all(parse_number) %>%
sjPlot::sjt.itemanalysis()
cleaned_dat %>%
select(CIHS_LIO1Pre:CIHS_LIO4Pre) %>%
# mutate_all(parse_number)  %>%
gather() %>%
ggplot(aes(value, fill = key)) +
geom_bar() +
facet_wrap(~key)  +
openmindR::theme_om() +
labs(x = "", y = "Density", title = "CIHS_LIO Scale")  +
openmindR::scale_fill_om() +
theme(legend.position = "bottom")
cleaned_dat %>%
select(CIHS_LIO1Pre:CIHS_LIO4Pre) %>%
# mutate_all(parse_number)  %>%
mutate(CIHS_LIO = (CIHS_LIO1Pre+CIHS_LIO2Pre+CIHS_LIO3Pre+CIHS_LIO4Pre)/4) %>%
ggplot(aes(CIHS_LIO)) +
geom_density(fill = openmindR::pal_om(6)[6]) +
openmindR::theme_om() +
labs(x = "", y = "Density", title = "Composite CIHS_LIO Score")  +
theme(legend.position = "bottom")
library(corrplot)
cleaned_dat %>%
select(CIHS_LIO1Pre:CIHS_LIO4Pre) %>%
# mutate_all(parse_number) %>%
cor(use = "pairwise.complete.obs")  %>%
corrplot(order = "hclust",
method = "square", outline = T, addgrid.col = "darkgray",
#addrect = RecNFactors,
rect.col = "black",
rect.lwd = 5,cl.pos = "b",tl.col='black', tl.cex=1,
addCoef.col="white",mar = c(4,0,4,0))
cleaned_dat %>%
# select(CIHS_LIO1Pre:CIHS_LIO4Pre,
#        CIHS_LIO1Post:CIHS_LIO4Post) %>%
# mutate_all(parse_number) %>%
# mutate(CIHS_LIOPre = (CIHS_LIO1Pre+CIHS_LIO2Pre+CIHS_LIO3Pre+CIHS_LIO4Pre)/4) %>%
# mutate(CIHS_LIOPost = (CIHS_LIO1Post+CIHS_LIO2Post+CIHS_LIO3Post+CIHS_LIO4Post)/4) %>%
select(CIHS_LIOPre, CIHS_LIOPost) %>%
gather() %>%
mutate(times = ifelse(str_detect(key, "Pre"), "Pre", "Post")) %>%
mutate(times = fct_relevel(times, c("Pre", "Post"))) %>%
ggplot(aes(value, color = times)) +
geom_density() +
scale_color_manual(values = pal_om(7)[5:6]) +
theme_om(legend_position = "bottom") +
labs(x = "", y = "Density", title = "IH - Lack of Intellectual Overconfidence (Pre vs. Post)")  +
theme(legend.position = "bottom")
CIHS_LIO_analysis <- cleaned_dat %>%
# select(OMID, CIHS_LIO1Pre:CIHS_LIO4Pre,
#        CIHS_LIO1Post:CIHS_LIO4Post) %>%
# mutate_at(vars(CIHS_LIO1Pre:CIHS_LIO4Pre,
#        CIHS_LIO1Post:CIHS_LIO4Post),parse_number) %>%
# mutate(CIHS_LIOPre = (CIHS_LIO1Pre+CIHS_LIO2Pre+CIHS_LIO3Pre+CIHS_LIO4Pre)/4) %>%
# mutate(CIHS_LIOPost = (CIHS_LIO1Post+CIHS_LIO2Post+CIHS_LIO3Post+CIHS_LIO4Post)/4) %>%
select(OMID, CIHS_LIOPre, CIHS_LIOPost) %>%
om_gather(which_strings = "CIHS_LIO") %>%
mutate(Time = fct_relevel(Time, c("Pre", "Post")))  %>%
dplyr::mutate(Time = as.factor(Time)) %>%
dplyr::mutate(OMID = as.factor(OMID)) %>%
tidyr::drop_na(Response) %>%
dplyr::add_count(OMID) %>%
dplyr::filter(n == 2)
CIHS_LIO_dat <- CIHS_LIO_analysis %>%
group_by(variable_code) %>% dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- CIHS_LIO_dat %>% pull(cohend) %>% round(2)
tlab <- CIHS_LIO_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
c("CIHS_LIO") %>%
purrr::map_dfr(~openmindR:::summary_se_within(subset(CIHS_LIO_analysis, variable_code == .x),
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
mutate(variable_code = .x)) %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 6) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("IH - Lack of Intellectual Overconfidence (Pre vs. Post)")
cleaned_dat %>%
# mutate_at(vars(GrowthMindsetPre, GrowthMindsetPost), parse_number) %>%
select(OMID, GrowthMindsetPre, GrowthMindsetPost) %>%
gather(key, value, -OMID) %>%
drop_na(value) %>%
add_count(OMID) %>%
filter(n == 2) %>%
mutate(times = ifelse(str_detect(key, "Pre"), "Pre", "Post")) %>%
mutate(times = fct_relevel(times, c("Pre", "Post"))) %>%
ggplot(aes(value, color = times)) +
geom_density() +
scale_color_manual(values = pal_om(7)[5:6]) +
theme_om(legend_position = "bottom") +
labs(x = "", y = "Density", title = "Growth Mindset (Pre vs. Post)")  +
theme(legend.position = "bottom")
GM_analysis <- cleaned_dat %>%
# mutate_at(vars(GrowthMindsetPre, GrowthMindsetPost), parse_number) %>%
select(OMID, GrowthMindsetPre, GrowthMindsetPost) %>%
om_gather(which_strings = "GrowthMindset") %>%
mutate(Time = fct_relevel(Time, c("Pre", "Post")))  %>%
dplyr::mutate(Time = as.factor(Time)) %>%
dplyr::mutate(OMID = as.factor(OMID)) %>%
tidyr::drop_na(Response) %>%
dplyr::add_count(OMID) %>%
dplyr::filter(n == 2)
GM_dat <- GM_analysis %>%
group_by(variable_code) %>% dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- GM_dat %>% pull(cohend) %>% round(2)
tlab <- GM_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
c("GrowthMindset") %>%
purrr::map_dfr(~openmindR:::summary_se_within(subset(GM_analysis, variable_code == .x),
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
mutate(variable_code = .x)) %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 6) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("Growth Mindset (Pre vs. Post)")
cleaned_dat %>%
select(IHTextPre) %>%
filter(IHTextPre != "(minor)") %>%
DT::datatable()
cleaned_dat %>%
select(IHTextPost) %>%
filter(IHTextPost != "(not asked yet)") %>%
filter(IHTextPost != "(minor)") %>%
DT::datatable()
cleaned_dat %>%
# mutate(SoughtOutDifferentPre = parse_number(SoughtOutDifferentPre)) %>%
ggplot(aes(SoughtOutDifferentPre)) +
geom_bar() +
openmindR::theme_om() +
labs(y = "Count", "")
cleaned_dat %>%
select(OMID, ConTempPre, ProgTempPre,
ConTempPost, ProgTempPost,
ppol_cat) %>%
# mutate_at(vars(ConTempPre,
#                ProgTempPre,
#                ConTempPost,
#                ProgTempPost), parse_number) %>%
gather(key, value, -ppol_cat, -OMID) %>%
drop_na(value) %>%
drop_na(ppol_cat) %>%
add_count(OMID) %>%
filter(n == 4) %>%
mutate(times = ifelse(str_detect(key, "Pre"), "Pre", "Post")) %>%
mutate(times = fct_relevel(times, c("Pre", "Post"))) %>%
mutate(opinion_on = ifelse(str_detect(key, "Con"), "Views on Conservatives", "Views on Progressives")) %>%
ggplot(aes(value, color = times))  +
geom_density() +
facet_grid(opinion_on~ppol_cat) +
scale_color_manual(values = pal_om(7)[5:6]) +
theme_om(legend_position = "bottom") +
labs(x = "", y = "Density", title = "Feeling Thermemometer (Pre vs. Post)")  +
theme(legend.position = "bottom")
TempAnalysis <- cleaned_dat %>%
select(OMID, ConTempPre, ProgTempPre,
ConTempPost, ProgTempPost,
ppol_cat) %>%
# # mutate_at(vars(ConTempPre, ProgTempPre), as.numeric) %>%
polar_measures(ConTempPre, ProgTempPre) %>%
polar_measures(ConTempPost, ProgTempPost) %>%
om_gather(which_strings = "AffPol1") %>%
mutate(Time = fct_relevel(Time, c("Pre", "Post")))  %>%
dplyr::mutate(Time = as.factor(Time)) %>%
dplyr::mutate(OMID = as.factor(OMID)) %>%
tidyr::drop_na(Response) %>%
dplyr::add_count(OMID) %>%
dplyr::filter(n == 2)
Temp_dat <- TempAnalysis %>%
group_by(variable_code) %>% dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- Temp_dat %>% pull(cohend) %>% round(2)
tlab <- Temp_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
c("AffPol1") %>%
purrr::map_dfr(~openmindR:::summary_se_within(subset(TempAnalysis, variable_code == .x),
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
mutate(variable_code = .x)) %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 100) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("Affective Polarization (Pre vs. Post)")
TempAnalysis <- cleaned_dat %>%
select(OMID, ConTempPre, ProgTempPre,
ConTempPost, ProgTempPost,
ppol_cat) %>%
# mutate_at(vars(ConTempPre, ProgTempPre), as.numeric) %>%
polar_measures(ConTempPre, ProgTempPre) %>%
polar_measures(ConTempPost, ProgTempPost) %>%
om_gather(which_strings = "AffPol2") %>%
mutate(Time = fct_relevel(Time, c("Pre", "Post")))  %>%
dplyr::mutate(Time = as.factor(Time)) %>%
dplyr::mutate(OMID = as.factor(OMID)) %>%
tidyr::drop_na(Response) %>%
dplyr::add_count(OMID) %>%
dplyr::filter(n == 2)
Temp_dat <- TempAnalysis %>%
group_by(variable_code) %>% dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- Temp_dat %>% pull(cohend) %>% round(2)
tlab <- Temp_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
c("AffPol2") %>%
purrr::map_dfr(~openmindR:::summary_se_within(subset(TempAnalysis, variable_code == .x),
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
mutate(variable_code = .x)) %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 100) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("Ingroup-Outgroup Polarization (Pre vs. Post)")
TempAnalysis <- cleaned_dat %>%
select(OMID, ConTempPre, ProgTempPre,
ConTempPost, ProgTempPost,
ppol_cat) %>%
# mutate_at(vars(ConTempPre, ProgTempPre), as.numeric) %>%
polar_measures(ProgTempPre, ConTempPre) %>%
polar_measures(ProgTempPost, ConTempPost) %>%
om_gather(which_strings = "OutgroupLiking") %>%
mutate(Time = fct_relevel(Time, c("Pre", "Post")))  %>%
dplyr::mutate(Time = as.factor(Time)) %>%
dplyr::mutate(OMID = as.factor(OMID)) %>%
tidyr::drop_na(Response) %>%
dplyr::add_count(OMID) %>%
dplyr::filter(n == 2)
Temp_dat <- TempAnalysis %>%
group_by(variable_code) %>% dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- Temp_dat %>% pull(cohend) %>% round(2)
tlab <- Temp_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
c("OutgroupLiking") %>%
purrr::map_dfr(~openmindR:::summary_se_within(subset(TempAnalysis, variable_code == .x),
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
mutate(variable_code = .x)) %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 100) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("Outgroup Liking (Pre vs. Post)")
comb_mot_analysis <- comb_mot_prepost %>%
om_gather(which_strings = "OutgroupMotivation") %>%
mutate(Time = fct_relevel(Time, c("Pre", "Post")))  %>%
dplyr::mutate(Time = as.factor(Time)) %>%
dplyr::mutate(OMID = as.factor(OMID)) %>%
tidyr::drop_na(Response) %>%
dplyr::add_count(OMID) %>%
dplyr::filter(n == 2)   %>%
mutate(variable_code = case_when(
variable_code == "OutgroupMotivation" ~ "Motivations of Outgroup",
))
comb_mot_analysis %>%
drop_na(ppol_cat) %>%
ggplot(aes(Response, color = Time)) +
geom_density() +
scale_color_manual(values = pal_om(7)[5:6]) +
theme_om(legend_position = "bottom") +
ylab("Density") + ggtitle("Motivations of Outgroup Pre vs. Post")
comp_comb_dat <- comb_mot_analysis %>%
drop_na(ppol_cat) %>%
group_by(variable_code) %>% dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- comp_comb_dat %>% pull(cohend) %>% round(2)
tlab <- comp_comb_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
c("Motivations of Outgroup") %>%
purrr::map_dfr(~openmindR:::summary_se_within(subset(comb_mot_analysis %>% drop_na(ppol_cat), variable_code == .x),
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
mutate(variable_code = .x)) %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 6) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("Motivations of Outgroup (Pre vs. Post)")
cleaned_dat %>%
select(Preparedness3Pre) %>%
# mutate_all(parse_number)  %>%
gather() %>%
ggplot(aes(value, fill = key)) +
geom_bar() +
facet_wrap(~key)  +
openmindR::theme_om() +
labs(x = "", y = "Count", title = "Preparedness Scale")  +
openmindR::scale_fill_om() +
theme(legend.position = "bottom")
cleaned_dat %>%
select(Preparedness3Pre,
Preparedness3Post) %>%
# mutate_all(parse_number) %>%
mutate(PreparednessPre = Preparedness3Pre) %>%
mutate(PreparednessPost = Preparedness3Post) %>%
select(PreparednessPre, PreparednessPost) %>%
gather() %>%
mutate(times = ifelse(str_detect(key, "ssPre"), "Pre", "Post")) %>%
mutate(times = fct_relevel(times, c("Pre", "Post"))) %>%
ggplot(aes(value, color = times)) +
geom_density() +
scale_color_manual(values = pal_om(7)[5:6]) +
theme_om(legend_position = "bottom") +
labs(x = "", y = "Density", title = "Preparedness (Pre vs. Post)")  +
theme(legend.position = "bottom")
Preparedness_analysis <- cleaned_dat %>%
select(OMID, Preparedness3Pre,
Preparedness3Post) %>%
# mutate_at(vars(Preparedness3Pre, Preparedness3Post),parse_number) %>%
mutate(PreparednessPre = Preparedness3Pre) %>%
mutate(PreparednessPost = Preparedness3Post) %>%
select(OMID, PreparednessPre, PreparednessPost) %>%
gather(key, Response, -OMID) %>%
mutate(Time = ifelse(str_detect(key, "ssPre"), "Pre", "Post")) %>%
mutate(Time = fct_relevel(Time, c("Pre", "Post")))  %>%
dplyr::mutate(Time = as.factor(Time)) %>%
dplyr::mutate(OMID = as.factor(OMID)) %>%
tidyr::drop_na(Response) %>%
dplyr::add_count(OMID) %>%
dplyr::filter(n == 2)
Preparedness_dat <- Preparedness_analysis %>%
# group_by(variable_code) %>%
dplyr::summarize(
cohend = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$estimate),
cohendCIlow = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[1]),
cohendCIhi = abs(effsize::cohen.d(Response~Time, paired = TRUE, conf.level = 0.95)$conf.int[2]),
tstat = abs(t.test(Response~Time, paired=TRUE)$statistic),
pvalue = t.test(Response~Time, paired=TRUE)$p.value,
df = t.test(Response~Time, paired=TRUE)$parameter
)
cohend <- Preparedness_dat %>% pull(cohend) %>% round(2)
tlab <- Preparedness_dat  %>%
mutate(pval = tidytemplate::get_plabs(pvalue)) %>%
mutate(tlab = glue::glue("t({round(df, 2)}) = {round(tstat, 2)}, {pval}")) %>%
pull(tlab)
openmindR:::summary_se_within(Preparedness_analysis,
measurevar = "Response",
withinvars = "Time",
idvar = "OMID") %>%
ggplot(aes(Time, Response, fill = Time)) +
geom_col() +
geom_errorbar(aes(ymin = Response - 1.96*SE, ymax = Response + 1.96*SE), width = 0.25, size = 0.01) +
scale_fill_manual(values = pal_om(5)[3:5]) +
theme_om(legend_position = "none") +
ylim(0, 6) +
labs(x = "", caption = paste0("T1 vs. T2: " ,"Cohen's d = ", cohend[1], "; ", tlab[1])) +
ggtitle("Preparedness Scale (Pre vs. Post)")
cleaned_dat %>%
dplyr::count(IssueDisplayPre, sort = T) %>%
drop_na() %>%
mutate(total = sum(n)) %>%
mutate(perc = tidytemplate::get_percentage(n, total, 2))
cleaned_dat %>%
# mutate(HowImportantIssuePre = parse_number(HowImportantIssuePre)) %>%
ggplot(aes(HowImportantIssuePre)) +
geom_histogram()
cleaned_dat %>%
select(C1Pre, C5Pre, C6Pre) %>%
mutate_all(as.numeric) %>%
mutate(C5Pre = 8 - C5Pre) %>%
sjPlot::sjt.itemanalysis()
cleaned_dat %>%
select(C1Pre, C5Pre, C6Pre) %>%
# mutate_all(as.numeric) %>%
mutate(C5Pre = 8 - C5Pre) %>%
gather() %>%
ggplot(aes(value, fill = key)) +
geom_bar() +
facet_wrap(~key)  +
openmindR::theme_om() +
labs(x = "", y = "Density", title = "Culture Questions")  +
openmindR::scale_fill_om() +
theme(legend.position = "bottom")
library(corrplot)
cleaned_dat %>%
select(C1Pre, C5Pre, C6Pre) %>%
mutate_all(as.numeric) %>%
mutate(C5Pre = 8 - C5Pre) %>%
cor(use = "pairwise.complete.obs")  %>%
corrplot(order = "hclust",
method = "square", outline = T, addgrid.col = "darkgray",
#addrect = RecNFactors,
rect.col = "black",
rect.lwd = 5,cl.pos = "b",tl.col='black', tl.cex=1,
addCoef.col="white",mar = c(4,0,4,0))
library(sjmisc)
cleaned_dat %>%
select(OMID, FeedbackAssessmentPre, FeedbackAssessmentPost, createdTime) %>%
gather(key, value, -OMID, -createdTime) %>%
select(-key) %>%
mutate(createdTime = lubridate::as_datetime(createdTime)) %>%
filter(value %nin% c("No", "No.", "no", "no.",
"(not asked yet)", ".", "(Opt Out)")) %>%
filter(value != "(minor)") %>%
drop_na() %>%
arrange(desc(createdTime)) %>%
DT::datatable()
AssessmentV6Codebook %>%
DT::datatable(escape = F)
devtools::install()
v6_var_strings <- "AffPol1|AffPol2|OutgroupLiking|IngroupLiking|MotivationProg|MotivationCon|CIHS_LIO|GrowthMindset|GBSS|MAA|OutgroupMotivation|IngroupMotivation|Preparedness|C1|C5|C6|IntellectualHumility|SoughtOutDifferent"
usethis::use_data(v6_var_strings, overwrite = T)
reverse <- c(reversePre, reversePost, reverseFollowUp, "SocialMediaUse")
devtools::document()
