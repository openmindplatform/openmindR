"Hispanic/Latino",
"Middle Eastern/North African",
"South Asian",
"White/Caucasian",
"Multiracial",
"Other",
"Prefer not to say") %>%
glue::glue_collapse(sep = "<br>")
pol_choices <- c("Very progressive/left",
"Progressive/left",
"Slightly progressive/left",
"Moderate/middle-of-the-road",
"Slightly conservative/right",
"Conservative/right",
"Very conservative/right",
"Libertarian/classical liberal",
"Don't know/not political",
"Other",
"Prefer not to say") %>%
glue::glue_collapse(sep = "<br>")
rel_choices <- c("Protestant",
"Roman Catholic",
"Mormon",
"Orthodox (such as Greek or Russian Orthodox)",
"Jewish",
"Muslim",
"Buddhist",
"Hindu",
"Taoist",
"Shintoist",
"Sikh",
"Atheist",
"Agnostic",
"Something else",
"Nothing in particular") %>%
glue::glue_collapse(sep = "<br>")
income_choices <- c("Below $25,000",
"$25,000-50,000",
"$50,000-$75,000",
"$75,000-$100,000",
"$100,000-$125,000",
"$125,000-$150,000",
"$150,000+") %>%
glue::glue_collapse(sep = "<br>")
highschool_choices <- c("Less than high school degree",
"High school degree or equivalent (e.g. GED)",
"Some college but no degree",
"Associate’s degree",
"Bachelor’s degree",
"Post-graduate degree") %>%
glue::glue_collapse(sep = "<br>")
CultureText <- c("When people in my {classroom} are really confident in their beliefs, they act as if there is very little chance their beliefs are wrong.", "In my {classroom}, people feel very strongly about important issues even if they don’t know much about them.", "In my {classroom}, people are generally curious to find out why other people have different opinions than they do.", "In my {classroom}, people are willing to have conversations with individuals who hold strong views opposite to their own.", "I'm afraid to speak up in my {classroom} when my beliefs go against the beliefs of my {peers}.", "In my {classroom}, I feel comfortable asking questions about sensitive issues without fear of being attacked.")
CIHS_LIO <- c("My ideas are usually better than other people’s ideas", "For the most part, others have more to learn from me than I have to learn from them", "When I am really confident in a belief, there is very little chance that belief is wrong", "I’d rather rely on my own knowledge about most topics than turn to others for expertise", "On important topics, I am not likely to be swayed by the viewpoints of others", "Listening to perspectives of others rarely changes my important opinions")
GBSSTopics <- c("universal health care", "stricter gun control laws", "the deportation of illegal immigrants", "higher taxes for the wealthy", "access to late-term abortions")
GBSSAnswers <- c("No more correct (1)", "Slightly more correct (2)", "Somewhat more correct (3)", "Much more correct (4)", "Totally correct (5)") %>%
glue::glue_collapse(sep = "<br>")
GBSS <- c(paste0("When thinking about your own views, how much more correct do you think your view is compared to other viewpoints on the following issues. My views on ", GBSSTopics, " are"))
demographics <- tibble(paste0("D", 1:8), DText) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Demographics") %>%
mutate(Answers = c("Numeric",
"Female<br>Male<br>Other<br>Prefer not to say",
race_choices,
pol_choices,
"Free Text",
rel_choices,
highschool_choices,
income_choices)) %>%
mutate(Source = "--")
culture <- tibble(paste0("C", 1:6), CultureText) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Culture") %>%
mutate(Answers = "7-Point Agreement Scale") %>%
mutate(Source = c("Modified from Krumrei- Mancuso, E. J., & Rouse, S. V. (2016)", "OM 2019", "Modified from Minson, J., Chen, F., & Tinsley, C. H. (under review)", "Modified from Minson, J., Chen, F., & Tinsley, C. H. (under review)", "OM 2019", "OM 2019"))
intellectual_humility <- tibble(paste0("CIHS_LIO", 1:length(CIHS_LIO)), CIHS_LIO) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Intellectual Humility") %>%
mutate(Answers = "7-Point Agreement Scale") %>%
mutate(Source = "Krumrei- Mancuso, E. J., & Rouse, S. V. (2016)")
GM <- tibble(`Variable Code` = "GrowthMindset", `Question Text` = "Your intelligence is something about you that you can't change very much") %>%
mutate(Concept = "Growth Mindset") %>%
mutate(Answers = "7-Point Agreement Scale") %>%
mutate(Source = "Dweck, C. S., Chiu, C. Y., & Hong, Y. Y. (1995)")
gbss <- tibble(paste0("GBSS", 1:length(GBSS)), GBSS) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "General Belief Superiority") %>%
mutate(Answers = GBSSAnswers) %>%
mutate(Source = "Raimi, K. T., & Jongman-Sereno, K. P. (2019)")
GBSSText <- c("Universal Health Care", "Stricter Gun Control Laws", "Deportation of Illegal Immigrants", "Higher Taxes for the Wealthy", "Access to Late-Term Abortions") %>%
glue::glue_collapse(sep = "<br>")
IssueDisplay <- "We’d like to learn more about your opinions. Please select one topic from the following list that you care a lot about"
issue <- tibble("IssueDisplay", IssueDisplay) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "--") %>%
mutate(Answers = GBSSText) %>%
mutate(Source = "OM 2019")
IssueStance <- "Do you generally support or oppose {IssueDisplay}?"
issuestance <- tibble("IssueStance", IssueStance) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "--") %>%
mutate(Answers = c("Support", "Oppose") %>% glue::glue_collapse(sep = "<br>")) %>%
mutate(Source = "OM 2019")
HowImportantIssue <- "Please indicate how strongly you feel about {IssueDisplay}, on a scale of 0 to 100, where 0 = Not at all, and 100 = Extremely strongly."
howimportantissue <- tibble("HowImportantIssue", HowImportantIssue) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "--") %>%
mutate(Answers = "0 to 100 Scale") %>%
mutate(Source = "OM 2019")
IHText <- "Imagine you saw the following post on Facebook, Reddit, or another similar social media platform.
“Hi folks. I’m trying to get the full picture on the issue of {TopicDisplay}. I know that a lot of people feel very strongly about it but I am interested in hearing some different perspectives. What are people’s thoughts? Feel free to comment below.”
Please use the text box below to write your “comment” to the person. Consider sharing things that you’re not certain about, and also where there may be good evidence on the other side."
ihtext <- tibble("IHText", IHText) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "--") %>%
mutate(Answers = "Free Text") %>%
mutate(Source = "OM 2019")
IssuesText <-  c("Universal Health Care", "Stricter Gun Control Laws", "Deportation of Illegal Immigrants", "Higher Taxes for the Wealthy", "Access to Late-Term Abortions")
IssueQ <- c("Try to understand their perspective on this issue", "Ask them questions about why they have the opinion they do", "Ignore what they have to say about this issue", "Listen to their reasoning for why they hold their opinion")
IssueQText <- paste0("Now, we would like you to imagine that you have a conversation with someone who opposes/supports {IssueDisplay}. How likely would you be to do the following? ", IssueQ)
IssueAnswers <- c("Not at all likely (1)", "Slightly Likely (2)", "Moderately likely (3)", "Very likely (4)", "Extremely likely (5)") %>%
glue::glue_collapse(sep = "<br>")
issueq <- tibble(paste0("IssueQ", 1:length(IssueQ)), IssueQText) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "--") %>%
mutate(Answers = IssueAnswers) %>%
mutate(Source = "Porter, T., & Schumann, K. (2018) - Responses to Disagreement Scale")
Preparedness <- c("When talking to a person I strongly disagree with politically, I feel very overwhelmed", "I am afraid to have conversations about controversial topics", "I would feel comfortable having difficult conversations with those who hold different views from me", "I feel prepared to have a difficult conversation with someone who holds different views")
preparedness <- tibble(paste0("Preparedness", 1:length(Preparedness)), Preparedness) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Preparedness for Difficult Conversations") %>%
mutate(Answers = "7-Point Agreement Scale") %>%
mutate(Source = "OM 2019")
ROV_NE <- c("Listening to people with views that strongly oppose mine tends to make me angry", "I feel disgusted by some of the things that people with views that oppose mine say", "I often feel frustrated when I listen to people with social and political views that oppose mine", "I often get annoyed during discussions with people with views that are very different from mine")
rov_ne <- tibble(paste0("ROV_NE", 1:length(ROV_NE)), ROV_NE) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Receptivity to Opposing Views-Negative Emotion") %>%
mutate(Answers = "7-Point Agreement Scale") %>%
mutate(Source = "Minson, J., Chen, F., & Tinsley, C. H. (under review)")
ExposureB <- c("In the past week, approximately how many people have you talked to (either in person or online) with a different political persuasion?", "In the past week, approximately how many times have you deliberately sought out a perspective that was different from your own?")
exposureb <- tibble(c("TalkToDifferent", "SoughtOutDifferent"), ExposureB) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Selective Exposure") %>%
mutate(Answers = c("1", "2", "3", "4+") %>% glue::glue_collapse(sep = "<br>")) %>%
mutate(Source = "OM 2019")
MotivationQ <- c("To what extent do you think that *progressives* are motivated by wanting to improve society?", "To what extent do you think that *progressives* are motivated by wanting to harm others?", "To what extent do you think that *conservatives* are motivated by wanting to improve society?", "To what extent do you think that *conservatives* are motivated by wanting to harm others?")
motq <- tibble(c("MotivationProg1",
"MotivationProg2",
"MotivationCon1",
"MotivationCon2"), MotivationQ) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Motivation Attribution Asymmetry") %>%
mutate(Answers = "7-Point Scale: 1 = Not at all - 7 = Extremely") %>%
mutate(Source = "Waytz, A., Young, L. L., & Ginges, J. (2014)")
ConTraitQ <- paste0("On a scale of 1-7, please rate *conservatives* according to the following characteristics:<br><b>", c("hypocritical", "selfish", "honest", "brainwashed", "reasonable"),"</b>")
contraitq <- tibble(paste0("TraitCon", 1:length(ConTraitQ)), ConTraitQ) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Trait Ratings") %>%
mutate(Answers = "7-Point Scale: 1 = Not at all - 7 = Extremely") %>%
mutate(Source = "Modified from More in Common (2019)")
ProgTraitQ <- paste0("On a scale of 1-7, please rate *progressives* according to the following characteristics:<br><b>", c("hypocritical", "selfish", "honest", "brainwashed", "reasonable"),"</b>")
progtraitq <- tibble(paste0("TraitProg", 1:length(ProgTraitQ)), ProgTraitQ) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Trait Ratings") %>%
mutate(Answers = "7-Point Scale: 1 = Not at all - 7 = Extremely") %>%
mutate(Source = "Modified from More in Common (2019)")
TempText <- c("How do you feel about individuals who identify as progressive (people on the left)?", "How do you feel about individuals who identify as conservative (people on the right)?")
tempq <- tibble(c("ProgTemp", "ConTemp"), TempText) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Affective Polarization I") %>%
mutate(Answers = "0 = Extremely cold - 100 = Extremely warm") %>%
mutate(Source = "American National Election Studies (ANES) Feeling Thermometer")
RoomieQ <- c("How would you feel if this person were your roommate/a colleague you worked with every day? [show picture of a Bernie supporter]", "How would you feel if this person were your roommate/a colleague you worked with every day? [show picture of a Trump supporter]")
roomieq <- tibble(c("UpsetProg", "UpsetCon"), RoomieQ) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Affective Polarization II") %>%
mutate(Answers = "1 = Not upset - 7 = Extremely upset") %>%
mutate(Source = "OM 2019")
LLGQ <- "Please review the list below and select the group that you like the <b>least</b>."
LeastLikedGroups <- c("Socialists", "Tea Party members", "Trump supporters", "Elizabeth Warren supporters", "Black Lives Matter protestors", "All Lives Matter protestors", "Pro-life supporters", "Pro-choice supporters", "Atheists", "Christians", "Muslims", "Other (you will be asked to enter a group)") %>% glue::glue_collapse(sep = "<br>")
llgq <- tibble("LeastLikedGroup", LLGQ) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Political Tolerance") %>%
mutate(Answers = LeastLikedGroups) %>%
mutate(Source = "Modified from Price, E., Ottati, V., Wilson, C., & Kim, S. (2015)")
LLQQRate <- "Please rate how you feel about {LeastLikedGroup}"
llgqrate <- tibble("HowLeastLikedGroup", LLQQRate) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Political Tolerance") %>%
mutate(Answers = "0 = Extremely cold - 100 = Extremely warm") %>%
mutate(Source = "OM 2019")
LeastLikedGroupQ <- c("Social media platforms should be doing more to moderate the content produced by {LeastLikedGroup}.",	"{LeastLikedGroup} should be prohibited from holding protests in my city.", "{LeastLikedGroup} should be prevented from teaching in public schools.", "{LeastLikedGroup} should be prevented from posting content in online forums.", "{LeastLikedGroup} should be permitted to use public college campuses to hand out pamphlets expressing their views.",	"It is more important to protect society from the views of {LeastLikedGroup} than it is to protect the free speech of {LeastLikedGroup}.")
politicaltolerance <- tibble(paste0("PoliticalTolerance", 1:length(LeastLikedGroupQ)), LeastLikedGroupQ) %>%
set_names(c("Variable Code", "Question Text")) %>%
mutate(Concept = "Political Tolerance") %>%
mutate(Answers = "7-Point Agreement Scale") %>%
mutate(Source = "Price, E., Ottati, V., Wilson, C., & Kim, S. (2015)")
bind_rows(demographics,
culture,
intellectual_humility,
GM,
gbss,
issue,
issuestance,
howimportantissue,
ihtext,
issueq,
preparedness,
rov_ne,
exposureb,
motq,
contraitq,
progtraitq,
roomieq,
llgq,
llgqrate,
politicaltolerance) %>%
DT::datatable(escape = F)
bind_rows(demographics,
culture,
intellectual_humility,
GM,
gbss,
issue,
issuestance,
howimportantissue,
ihtext,
issueq,
preparedness,
rov_ne,
exposureb,
motq,
contraitq,
progtraitq,
tempq,
roomieq,
llgq,
llgqrate,
politicaltolerance,
fassessment) %>%
DT::datatable(fillContainer = T, escape = F,
extensions = c('Scroller','Buttons'),
class = 'compact cell-border stripe',
options = list(
deferRender = FALSE,
scrollY = 1000,
scroller = TRUE,
dom = 'Bfrtip',
buttons = c('excel', 'pdf', 'csv')
))
bind_rows(demographics,
culture,
intellectual_humility,
GM,
gbss,
issue,
issuestance,
howimportantissue,
ihtext,
issueq,
preparedness,
rov_ne,
exposureb,
motq,
contraitq,
progtraitq,
tempq,
roomieq,
llgq,
llgqrate,
politicaltolerance,
fassessment) %>%
DT::datatable(fillContainer = T, escape = F,
extensions = c('Buttons'),
class = 'compact cell-border stripe',
options = list(
deferRender = FALSE,
dom = 'Bfrtip',
buttons = c('excel', 'pdf', 'csv')
))
bind_rows(demographics,
culture,
intellectual_humility,
GM,
gbss,
issue,
issuestance,
howimportantissue,
ihtext,
issueq,
preparedness,
rov_ne,
exposureb,
motq,
contraitq,
progtraitq,
tempq,
roomieq,
llgq,
llgqrate,
politicaltolerance,
fassessment) %>%
DT::datatable(fillContainer = T, escape = F,
extensions = c('Scroller','Buttons'),
options = list(
deferRender = FALSE,
scrollY = '450px',
scrollX = '100px',
scroller = TRUE,
dom = 'Bfrtip',
buttons = c('excel', 'pdf', 'csv')
))
bind_rows(demographics,
culture,
intellectual_humility,
GM,
gbss,
issue,
issuestance,
howimportantissue,
ihtext,
issueq,
preparedness,
rov_ne,
exposureb,
motq,
contraitq,
progtraitq,
tempq,
roomieq,
llgq,
llgqrate,
politicaltolerance,
fassessment) %>%
DT::datatable(fillContainer = T, escape = F,
extensions = c('Scroller','Buttons'), width = 6,
options = list(
deferRender = FALSE,
scrollY = '450px',
scroller = TRUE,
dom = 'Bfrtip',
buttons = c('excel', 'pdf', 'csv')
))
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::document()
devtools::install()
remove.packages("openmindR")
devtools::install()
raw_input <- "[5, (not asked), 9, (not asked), |Practical tools for respectful disagreement.|, |Replace the elephant and rider with another metaphor or clear language. It was hard to keep clear the meaning of elephant and rider. The reference got confused with the pink elephant in the introduction. And I couldn’t figure out why a non-partisan environment was so full of elephants without a single donkey reference. Can you put the rider on a donkey?|]"
if (is.na(raw_input)) {
return(dplyr::tibble(no_data = 1))
}
raw_input %>%
openmindR::om_strsplit("],", type = "after") %>%
purrr::map(~stringr::str_split(.x, ",")) %>%
magrittr::extract2(1) %>%
purrr::map(~{
fixed_answers <- .x[1:4]
open_answers <- .x[5:length(.x)] %>%
glue::glue_collapse(",") %>%
stringr::str_split(", \\|", n = 2)
# stringr::str_split("\\.,|\\b , \\b")
return(list(fixed_answers = fixed_answers,
open_answers = open_answers))
}) -> split_string
clean_fix <- split_string %>%
purrr::map("fixed_answers") %>%
dplyr::bind_cols()
clean_open <- split_string %>%
purrr::map("open_answers") %>%
purrr::flatten() %>%
dplyr::bind_cols()
row_dat <- dplyr::bind_rows(clean_fix, clean_open) %>%
dplyr::mutate_all(function(x) ifelse(nchar(x) == 0, NA, x)) %>%
dplyr::mutate_all(function(x) stringr::str_remove_all(x, "\\[\\[|\\[")) %>%
purrr::set_names(.[1,] %>% .[1:ncol(.)]) %>%
janitor::clean_names() %>%
dplyr::mutate(colnames = c("Step", paste0("X", 1:5))) %>%
dplyr::mutate_all(stringr::str_trim)
## Remove duplicate steps
row_dat <- row_dat[,!(row_dat[1, ] %>% purrr::transpose() %>% duplicated())]
row_dat <- row_dat[,!(row_dat %>% slice(1) %>% unlist() %>% as.vector() %>% duplicated())]
row_dat <- row_dat[,!(row_dat %>% dplyr::slice(1) %>% unlist() %>% as.vector() %>% duplicated())]
final_dat <- row_dat %>%
colnames() %>%
purrr::discard(. == "colnames") %>%
purrr::map_dfc(~spread_it(.x, row_dat)) %>%
dplyr::as_tibble()
devtools::document()
devtools::document()
devtools::install()
shortened_version <- c("D1", "D2", "D3", "D4", "D6", "C1", "C5", "C6", "ProgTemp", "ConTemp", "MotivationProg1", "MotivationProg2", "MotivationCon1", "MotivationCon2", "CIHS_LIO1", "CIHS_LIO2", "CIHS_LIO3", "CIHS_LIO4", "GrowthMindset", "IssueDisplay", "HowImportantIssue", "IHText", "Preparedness3", "SoughtOutDifferent", "FeedbackAssessment", "GBSS1", "GBSS2", "GBSS3")
pacman::p_load(tidyverse, tidytemplate, openmindR)
AssessmentV6Codebook %>%
filter(`Variable Code` %in% shortened_version)
AssessmentV61Codebook <- AssessmentV6Codebook %>%
filter(`Variable Code` %in% shortened_version)
usethis::use_data(AssessmentV61Codebook)
usethis::use_data(AssessmentV61Codebook)
usethis::use_data(AssessmentV61Codebook)
shortened_version <- c("D1", "D2", "D3", "D4", "D6", "C1", "C5", "C6", "ProgTemp", "ConTemp", "MotivationProg1", "MotivationProg2", "MotivationCon1", "MotivationCon2", "CIHS_LIO1", "CIHS_LIO2", "CIHS_LIO3", "CIHS_LIO4", "GrowthMindset", "IssueDisplay", "HowImportantIssue", "IHText", "Preparedness3", "SoughtOutDifferent", "FeedbackAssessment", "GBSS1", "GBSS2", "GBSS3")
AssessmentV61Codebook <- AssessmentV6Codebook %>%
filter(`Variable Code` %in% shortened_version)
shortened_version <- c("D1", "D2", "D3", "D4", "D6", "C1", "C5", "C6", "ProgTemp", "ConTemp", "MotivationProg1", "MotivationProg2", "MotivationCon1", "MotivationCon2", "CIHS_LIO1", "CIHS_LIO2", "CIHS_LIO3", "CIHS_LIO4", "GrowthMindset", "IssueDisplay", "HowImportantIssue", "IHText", "Preparedness3", "SoughtOutDifferent", "FeedbackAssessment", "GBSS1", "GBSS2", "GBSS3")
AssessmentV61Codebook <- openmindr::AssessmentV6Codebook %>%
filter(`Variable Code` %in% shortened_version)
shortened_version <- c("D1", "D2", "D3", "D4", "D6", "C1", "C5", "C6", "ProgTemp", "ConTemp", "MotivationProg1", "MotivationProg2", "MotivationCon1", "MotivationCon2", "CIHS_LIO1", "CIHS_LIO2", "CIHS_LIO3", "CIHS_LIO4", "GrowthMindset", "IssueDisplay", "HowImportantIssue", "IHText", "Preparedness3", "SoughtOutDifferent", "FeedbackAssessment", "GBSS1", "GBSS2", "GBSS3")
AssessmentV61Codebook <- openmindR::AssessmentV6Codebook %>%
filter(`Variable Code` %in% shortened_version)
AssessmentV61Codebook
openmindR::AssessmentV6Codebook
AssessmentV61Codebook <- openmindR::AssessmentV6Codebook %>%
filter(`Variable Code` %in% shortened_version)
AssessmentV61Codebook <- openmindR::AssessmentV6Codebook %>%
filter(`Variable Code` %in% shortened_version)
openmindR::AssessmentV6Codebook
AssessmentV61Codebook <- openmindR::AssessmentV6Codebook %>%
janitor::clean_names() %>%
filter(`variable_code %in% shortened_version)
AssessmentV61Codebook <- openmindR::AssessmentV6Codebook %>%
janitor::clean_names() %>%
filter(variable_code %in% shortened_version)
AssessmentV61Codebook <- openmindR::AssessmentV6Codebook %>%
dplyr::filter(`Variable Code` %in% shortened_version)
usethis::use_data(AssessmentV61Codebook)
devtools::document()
final_list$dat.ass6 <- clean_assessment <- final_list$dat.ass6 %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(minor)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(Opt Out)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not asked yet)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not asked)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not met)"), NA_character_, .x))  %>%
dplyr::select(sort(tidyselect::peek_vars(), decreasing = T)) %>%
dplyr::select(id, OMID, AccessCode, AssessmentVersion, AssessmentsDone,
D1, D2, D3, D4, D5, D6, D7, D8,
everything()) %>%
# select(contains("Trait"))
dplyr::mutate_at(vars(AssessmentVersion,
AssessmentsDone,
D1,
dplyr::contains("Motivation"),
dplyr::contains("GBSS"),
dplyr::contains("CIHS_LIO"),
dplyr::contains("Temp"),
dplyr::contains("C1"),
dplyr::contains("C2"),
dplyr::contains("C3"),
dplyr::contains("C4"),
dplyr::contains("C5"),
dplyr::contains("C6"),
dplyr::contains("HowImportantIssue"),
dplyr::contains("SoughtOutDifferent"),
dplyr::contains("Preparedness"),
dplyr::contains("GrowthMindset"),
dplyr::contains("Trait"),
dplyr::contains("Upset"),
dplyr::contains("HowLeastLikedGroup"),
dplyr::contains("PoliticalTolerance"),
dplyr::contains("IssueQ"),
dplyr::contains("ROV_NE"),
dplyr::contains("TalkToDifferent"),
dplyr::contains("Trait")
), ~as.character(.x) %>% readr::parse_number())
dat.ass6 %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(minor)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(Opt Out)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not asked yet)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not asked)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not met)"), NA_character_, .x))  %>%
dplyr::select(sort(tidyselect::peek_vars(), decreasing = T)) %>%
dplyr::select(id, OMID, AccessCode, AssessmentVersion, AssessmentsDone,
D1, D2, D3, D4, D5, D6, D7, D8,
everything()) %>%
# select(contains("Trait"))
dplyr::mutate_at(vars(AssessmentVersion,
AssessmentsDone,
D1,
dplyr::contains("Motivation"),
dplyr::contains("GBSS"),
dplyr::contains("CIHS_LIO"),
dplyr::contains("Temp"),
dplyr::contains("C1"),
dplyr::contains("C2"),
dplyr::contains("C3"),
dplyr::contains("C4"),
dplyr::contains("C5"),
dplyr::contains("C6"),
dplyr::contains("HowImportantIssue"),
dplyr::contains("SoughtOutDifferent"),
dplyr::contains("Preparedness"),
dplyr::contains("GrowthMindset"),
dplyr::contains("Trait"),
dplyr::contains("Upset"),
dplyr::contains("HowLeastLikedGroup"),
dplyr::contains("PoliticalTolerance"),
dplyr::contains("IssueQ"),
dplyr::contains("ROV_NE"),
dplyr::contains("TalkToDifferent"),
dplyr::contains("Trait")
), ~as.character(.x) %>% readr::parse_number())
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::document()
