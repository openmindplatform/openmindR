#' @export
clean_assessment7 <- function(assessment) {
test_acs <- c("TESTcollege", "TESTcorp", "TESTorgadult", "TESTorgstudent", "TESThighschool", "TESTcollegeFUM", "TESTcollegeOMV3", "TEST2020")
assessment7 <- assessment %>%
dplyr::filter(AccessCode != "Admin") %>%
dplyr::select(-MisclickPre, -MisclickPost, -MisclickFollowUp) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(minor)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(Opt Out)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not asked yet)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not asked)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(not met)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(Prefer not to say)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "(Blank)"), NA_character_, .x)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, ""), NA_character_, .x)) %>%
dplyr::mutate(D1 = ifelse(D1 == "99", "991", D1)) %>%
dplyr::mutate(TargetAge = ifelse(TargetAge == "99", "991", TargetAge)) %>%
dplyr::mutate_all(~ifelse(magrittr::equals(.x, "99"), NA_character_, .x)) %>%
dplyr::mutate(D1 = ifelse(D1 == "991", "99", D1)) %>%
dplyr::mutate(TargetAge = ifelse(TargetAge == "991", "99", TargetAge)) %>%
dplyr::filter(!(AccessCode %in% test_acs)) %>%
# dplyr::select(sort(tidyselect::peek_vars(), decreasing = F)) %>%
dplyr::select(id, OMID, AccessCode, AssessmentVersion, AssessmentsDone,
D1, D2, D3, D4, D5, D6,
dplyr::everything()) %>%
dplyr::mutate_all(as.character) %>%
om_clean_ppol()  %>%
dplyr::mutate_at(dplyr::vars(
dplyr::contains("Date"),
dplyr::contains("Time")
), ~lubridate::as_datetime(.x)) %>%
dplyr::mutate_at(dplyr::vars(AssessmentVersion,
AssessmentsDone,
D1,
dplyr::contains("Motivation"),
dplyr::contains("GBSS"),
dplyr::contains("Temp"),
dplyr::contains("IH"),
dplyr::contains("IntAnx"),
dplyr::contains("Avoidance"),
dplyr::contains("Tolerance"),
dplyr::contains("Attribution"),
dplyr::contains("SocialDistance"),
dplyr::contains("SE", ignore.case = F),
dplyr::contains("GM"),
dplyr::contains("Anxiety"),
dplyr::contains("Belong"),
dplyr::contains("Dissent"),
dplyr::contains("Age"),
dplyr::contains("NQuestions"),
dplyr::contains("SocialMediaUse")
), ~as.character(.x) %>% readr::parse_number()) %>%
dplyr::mutate(Issue = readr::parse_number(Issue)) %>%
## Temperature Questions
polar_measures(ProgTempPre, ConTempPre) %>%
polar_measures(ProgTempPost, ConTempPost) %>%
polar_measures(ProgTempFollowUp, ConTempFollowUp) %>%
## Motivation Questions
## need to be reversed correctly (first 2 then 1!)
dplyr::mutate(MotivationProgPre = (MotivationProg2Pre + (8 - MotivationProg1Pre)) / 2) %>%
dplyr::mutate(MotivationProgPost = (MotivationProg2Post + (8 - MotivationProg1Post)) / 2) %>%
dplyr::mutate(MotivationProgFollowUp = (MotivationProg2FollowUp + (8 - MotivationProg1FollowUp)) / 2) %>%
dplyr::mutate(MotivationConPre = (MotivationCon2Pre + (8 - MotivationCon1Pre)) / 2) %>%
dplyr::mutate(MotivationConPost = (MotivationCon2Post + (8 - MotivationCon1Post)) / 2) %>%
dplyr::mutate(MotivationConFollowUp = (MotivationCon2FollowUp + (8 - MotivationCon1FollowUp)) / 2) %>%
dplyr::mutate(IngroupMotivationPre = dplyr::case_when(
ppol_cat == "Progressives" ~ MotivationProgPre,
ppol_cat == "Conservatives" ~ MotivationConPre
)) %>%
# my outgroup
dplyr::mutate(OutgroupMotivationPre = dplyr::case_when(
ppol_cat == "Conservatives" ~ MotivationProgPre,
ppol_cat == "Progressives" ~ MotivationConPre
)) %>%
# my ingroup
dplyr::mutate(IngroupMotivationPost = dplyr::case_when(
ppol_cat == "Progressives" ~ MotivationProgPost,
ppol_cat == "Conservatives" ~ MotivationConPost
)) %>%
# my outgroup
dplyr::mutate(OutgroupMotivationPost = dplyr::case_when(
ppol_cat == "Conservatives" ~ MotivationProgPost,
ppol_cat == "Progressives" ~ MotivationConPost
)) %>%
# my ingroup
dplyr::mutate(IngroupMotivationFollowUp = dplyr::case_when(
ppol_cat == "Progressives" ~ MotivationProgFollowUp,
ppol_cat == "Conservatives" ~ MotivationConFollowUp
)) %>%
# my outgroup
dplyr::mutate(OutgroupMotivationFollowUp = dplyr::case_when(
ppol_cat == "Conservatives" ~ MotivationProgFollowUp,
ppol_cat == "Progressives" ~ MotivationConFollowUp
)) %>%
# compute ingroup v outgroup motivation attribution
dplyr::mutate(MAAPre = abs(IngroupMotivationPre - OutgroupMotivationPre))%>%
# compute ingroup v outgroup motivation attribution
dplyr::mutate(MAAPost = abs(IngroupMotivationPost - OutgroupMotivationPost)) %>%
# compute ingroup v outgroup motivation attribution
dplyr::mutate(MAAFollowUp = abs(IngroupMotivationFollowUp - OutgroupMotivationFollowUp)) %>%
# GBSS
dplyr::mutate(GBSSPre = ((GBSS1Pre+GBSS2Pre+GBSS3Pre)/3) %>% magrittr::subtract(6, .)) %>%
dplyr::mutate(GBSSPost = ((GBSS1Post+GBSS2Post+GBSS3Post)/3) %>% magrittr::subtract(6, .)) %>%
dplyr::mutate(GBSSFollowUp = ((GBSS1FollowUp+GBSS2FollowUp+GBSS3FollowUp)/3) %>% magrittr::subtract(6, .)) %>%
## Interaction Anxiety
dplyr::mutate(IntAnxPre = ((IntAnx1Pre+IntAnx2Pre)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IntAnxPost = ((IntAnx1Post+IntAnx2Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IntAnxFollowUp = ((IntAnx1FollowUp+IntAnx2FollowUp)/2) %>% magrittr::subtract(8, .)) %>%
## Avoidance
dplyr::mutate(AvoidancePre = ((Avoidance1Pre+Avoidance2Pre)/2)  %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(AvoidancePost = ((Avoidance1Post+Avoidance2Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(AvoidanceFollowUp = ((Avoidance1FollowUp+Avoidance2FollowUp)/2) %>% magrittr::subtract(8, .)) %>%
## Tolerance
dplyr::mutate(TolerancePre = (Tolerance1Pre+Tolerance2Pre)/2) %>%
dplyr::mutate(TolerancePost = (Tolerance1Post+Tolerance2Post)/2) %>%
dplyr::mutate(ToleranceFollowUp = (Tolerance1FollowUp+Tolerance2FollowUp)/2) %>%
## Attribution
dplyr::mutate(AttributionPre = ((Attribution1Pre+Attribution2Pre)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(AttributionPost = ((Attribution1Post+Attribution2Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(AttributionFollowUp = ((Attribution1FollowUp+Attribution2FollowUp)/2) %>% magrittr::subtract(8, .)) %>%
## SocialDistance
dplyr::mutate(SocialDistancePre = ((SocialDistance1Pre+SocialDistance2Pre+SocialDistance3Pre)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(SocialDistancePost = ((SocialDistance1Post+SocialDistance2Post+SocialDistance3Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(SocialDistanceFollowUp = ((SocialDistance1FollowUp+(SocialDistance2FollowUp)+SocialDistance3FollowUp)/2) %>% magrittr::subtract(8, .)) %>%
## IH - Subscale 1
dplyr::mutate(IHSub1Pre = ((IH1Pre+IH2Pre)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHSub1Post = ((IH1Post+IH2Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHSub1FollowUp = ((IH1FollowUp+IH2FollowUp)/2) %>% magrittr::subtract(8, .)) %>%
## IH - Subscale 2
dplyr::mutate(IHSub2Pre = ((IH3Pre)+(IH4Pre))/2) %>%
dplyr::mutate(IHSub2Post = ((IH3Post)+(IH4Post))/2) %>%
dplyr::mutate(IHSub2FollowUp = ((IH3FollowUp)+(IH4FollowUp))/2) %>%
## IH - Subscale 3
dplyr::mutate(IHSub3Pre = ((IH5Pre+IH6Pre)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHSub3Post = ((IH5Post+IH6Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHSub3FollowUp = ((IH5FollowUp+IH6FollowUp)/2) %>% magrittr::subtract(8, .)) %>%
# GM
dplyr::mutate(GMPre = ((8-GM1Pre)+(8-GM2Pre)+(GM3Pre))/3) %>%
dplyr::mutate(GMPost = ((8-GM1Post)+(8-GM2Post)+(GM3Post))/3) %>%
dplyr::mutate(GMFollowUp = ((8-GM1FollowUp)+(8-GM2FollowUp)+(GM3FollowUp))/3) %>%
# Belonging
dplyr::mutate(BelongPre = (Belong1Pre+Belong2Pre+Belong3Pre)/3) %>%
dplyr::mutate(BelongPost = (Belong1Post+Belong2Post+Belong3Post)/3) %>%
dplyr::mutate(BelongFollowUp = (Belong1FollowUp+Belong2FollowUp+Belong3FollowUp)/3) %>%
# Belonging
dplyr::mutate(BelongPre = (Belong1Pre+Belong2Pre+Belong3Pre)/3) %>%
dplyr::mutate(BelongPost = (Belong1Post+Belong2Post+Belong3Post)/3) %>%
dplyr::mutate(BelongFollowUp = (Belong1FollowUp+Belong2FollowUp+Belong3FollowUp)/3) %>%
# SE
dplyr::mutate(SEPre = ((8-SE1Pre)+(SE2Pre)+(8-SE3Pre)+(SE4Pre))/4) %>%
dplyr::mutate(SEPost = ((8-SE1Post)+(SE2Post)+(8-SE3Post)+(SE4Post))/4) %>%
dplyr::mutate(SEFollowUp = ((8-SE1FollowUp)+(SE2FollowUp)+(8-SE3FollowUp)+(SE4FollowUp))/4) %>%
# Anxiety
dplyr::mutate(AnxietyPre = ((Anxiety1Pre+Anxiety2Pre+Anxiety3Pre+Anxiety4Pre)/4) %>% magrittr::subtract(6, .)) %>%
dplyr::mutate(AnxietyPost = ((Anxiety1Post+Anxiety2Post+Anxiety3Post+Anxiety4Post)/4) %>% magrittr::subtract(6, .)) %>%
dplyr::mutate(AnxietyFollowUp = ((Anxiety1FollowUp+Anxiety2FollowUp+Anxiety3FollowUp+Anxiety4FollowUp)/4) %>% magrittr::subtract(6, .)) %>%
# Dissent
dplyr::mutate(DissentPre = ((Dissent1Pre+Dissent2Pre+Dissent3Pre+Dissent4Pre+(8-Dissent5Pre))/5) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(DissentPost = ((Dissent1Post+Dissent2Post+Dissent3Post+Dissent4Post+(8-Dissent5Post))/5) %>% magrittr::subtract(8, .))  %>%
dplyr::mutate(DissentFollowUp = ((Dissent1FollowUp+Dissent2FollowUp+Dissent3FollowUp+Dissent4FollowUp+(8-Dissent5FollowUp))/5) %>% magrittr::subtract(8, .))  %>%
## IHCulture - Subscale 1
dplyr::mutate(IHCultureSub1Pre = ((IHCulture1Pre+IHCulture2Pre)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHCultureSub1Post = ((IHCulture1Post+IHCulture2Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHCultureSub1FollowUp = ((IHCulture1FollowUp+IHCulture2FollowUp)/2) %>% magrittr::subtract(8, .)) %>%
## IHCulture - Subscale 2
dplyr::mutate(IHCultureSub2Pre = ((IHCulture3Pre)+(IHCulture4Pre))/2) %>%
dplyr::mutate(IHCultureSub2Post = ((IHCulture3Post)+(IHCulture4Post))/2) %>%
dplyr::mutate(IHCultureSub2FollowUp = ((IHCulture3FollowUp)+(IHCulture4FollowUp))/2) %>%
## IHCulture - Subscale 3
dplyr::mutate(IHCultureSub3Pre = ((IHCulture5Pre+IHCulture6Pre)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHCultureSub3Post = ((IHCulture5Post+IHCulture6Post)/2) %>% magrittr::subtract(8, .)) %>%
dplyr::mutate(IHCultureSub3FollowUp = ((IHCulture5FollowUp+IHCulture6FollowUp)/2) %>% magrittr::subtract(8, .))
return(assessment7)
}
devtools::load_all()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[4]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
# .[[4]] %>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[5]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[6]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[7]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[8]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[9]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[10]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[11]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[12]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[13]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[14]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[15]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[16]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[16]]
#' Helper function to calculate percent of people who improved
#'
#' This function calculates percent of people who improved from pre to post/followup
#' @param all_pre Pre Data
#' @param all_post Post data
#' @param total N
#' @param variable_code variable code
#' @export
perc_improved <- function(all_pre, all_post, total, variable_code){
ups <- c("GrowthMindset", "CIHS_LIO",
"OutgroupLiking", "OutgroupMotivation",
"Preparedness", "C1", "C6",
"IntellectualHumility", "GM", "IHSub1", "IHSub2", "IHSub3",
"IHCultureSub1", "IHCultureSub2", "IHCultureSub3", "SE", "Belong", "Dissent", "Tolerance", "IngroupLiking")
downs <- c("AffPol1", "AffPol2",
"GBSS", "MAA", "C5", "Anxiety", "Attribution", "IntAnx", "SocialDistance", "Avoidance")
if (variable_code %in% ups) {
p_improv <- sum((all_pre < all_post)==TRUE)/total
}
if (variable_code %in% downs) {
p_improv <- sum((all_pre > all_post)==TRUE)/total
}
return(p_improv)
}
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[16]] %>%
om_ttest("PrePost")
#' Helper function to calculate percent of people who improved
#'
#' This function calculates percent of people who improved from pre to post/followup
#' @param all_pre Pre Data
#' @param all_post Post data
#' @param total N
#' @param variable_code variable code
#' @export
perc_improved <- function(all_pre, all_post, total, variable_code){
ups <- c("GrowthMindset", "CIHS_LIO",
"OutgroupLiking", "OutgroupMotivation",
"Preparedness", "C1", "C6",
"IntellectualHumility", "GM", "IHSub1", "IHSub2", "IHSub3",
"IHCultureSub1", "IHCultureSub2", "IHCultureSub3", "SE", "Belong", "Dissent", "Tolerance", "IngroupLiking")
downs <- c("AffPol1", "AffPol2",
"GBSS", "MAA", "C5", "Anxiety", "Attribution", "IntAnx", "SocialDistance", "Avoidance")
if (variable_code %in% ups) {
p_improv <- sum((all_pre < all_post)==TRUE)/total
}
if (variable_code %in% downs) {
p_improv <- sum((all_pre > all_post)==TRUE)/total
}
return(p_improv)
}
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[16]] %>%
om_ttest("PrePost")
devtools::load_all()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[16]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[17]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
split(.$variable_code) %>%
.[[17]]
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
dplyr::count(variable_code, sort = T)
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
filter(is.na(variable_code))
v7_strings
wide_dat %>%
colnames() %>%
keep(~str_detect(.x, "Pre|Post")) %>%
str_remove("Pre|Post") %>%
unique()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[17]] %>%
om_ttest("PrePost")
devtools::load_all()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
# .[[17]] %>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[17]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[18]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[19]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[20]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[20]]
devtools::load_all()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[20]]
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
# .[[20]] %>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[21]] %>%
om_ttest("PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
.[[21]] #%>%
devtools::load_all()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
# .[[21]] #%>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost")
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
# .[[21]] #%>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost") %>%
select(variable_code, cohend, pvalue, N, Pre, Post)
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
# .[[21]] #%>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost")# %>%
assessmentv7 <- om_download_at(key,
tables = "AssessmentV7",
clean = TRUE)
devtools::load_all()
assessmentv7 <- om_download_at(key,
tables = "AssessmentV7",
clean = TRUE)
wide_dat <- assessmentv7 %>%
select(OMID:AssessmentsDone, AffPol1Pre:IHCultureSub3FollowUp) %>%
janitor::remove_empty()
v7_strings <- wide_dat %>%
colnames() %>%
keep(~str_detect(.x, "Pre|Post")) %>%
str_remove("Pre|Post") %>%
unique() %>%
paste0(collapse = "|")
# debugonce(om_ttest)
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
# .[[21]] #%>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost")# %>%
select(variable_code, cohend, pvalue, N, Pre, Post, percentimproved) %>%
arrange(desc(cohend)) %>%
View()
wide_dat %>%
om_gather(which_strings = v7_strings)  %>%
drop_na() %>%
# filter(is.na(variable_code))
# dplyr::count(variable_code, sort = T) %>%
split(.$variable_code) %>%
# .[[21]] #%>%
# om_ttest("PrePost")
map_dfr(~{om_ttest(.x, "PrePost")}) %>%
mutate(Variant = "7") %>%
mutate(Comparison = "PrePost") %>%
select(variable_code, cohend, pvalue, N, Pre, Post, percentimproved) %>%
arrange(desc(cohend)) %>%
View()
